in Employee.cs file

using System.componentModel.Dataanotations;
using System.componentModel.Dataanotations.schema;


public class Employee
{
  [Required(ErrorMessage="UserName is Mandatory")]
  [Display(Name="Employee Name",Prompt="Enter Employee Name")]
   public string UserName {get; set;} 

  [Required]
  [DataType(DataType.Password)] // if using a templated helper in .cshtml file
   public string Password {get; set;}

 [Required(ErrorMessage="Enter Password to Confirm")]
[Display(Name="Confirm Password")]
[Compare("Password",ErrorMessage = "Password does not match")]
public string ConfirmPassword {get; set;}

[Required(ErrorMessage= "Please enter Email")]
[Display(Name="EmailID")]
[RegularExpression(@"^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$", ErrorMessage ="Enter Email in the correct Format")]
public string Email {get;set;}
[Range(18,60,ErrorMessage("")]
public int Age {get; set;}
 
//[StringLength(30, MinimumLength=6,ErrorMessage("")
[Range(18,60,ErrorMessage("")]

}

in EmployeeController.cs

[HttpPost]
[ValidateAntiForgeryToken]

public ActionResult Create(Employee e)
{
  if(string.IsNullOrEmpty(e.UserName))
{
ModelState.AddModelError("UserName", "Please Enter Name");
}

if(!string.IsNullOrEmpty(e.Email))
{
  string emailexp=@"^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$
  RegEx re=newRegex(emailexp);
if(!re.IsMatch(e.Email))
{
  ModelState.AddModelError("Email","Enter email in the correct format");
}

If(ModelState.IsValid)
{
  db.Employees.Add(e);
db.SaveChanges();
return RedirectToAction("Index");
}
else
return View();


 

}

